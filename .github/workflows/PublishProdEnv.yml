name: Build and deploy StudyGuidance T4T Produvtion
env:
  AZURE_WEBAPP_NAME_FRONTEND: StudyGuidanceWebApp
  AZURE_WEBAPP_NAME_BACKEND: StudGuidanceApi

  WORKING_DIRECTORY_FRONTEND: './StudyGuidance/StudyGuidance.Web'
  WORKING_DIRECTORY_BACKEND: './StudyGuidance/StudGuidance.Api'
  
  AZURE_WEBAPP_PACKAGE_PATH_FRONTEND: './publish'
  AZURE_WEBAPP_PACKAGE_PATH_BACKEND: './publish_backend'

  FRONTEND_URL_LOCATTION: './StudyGuidance/StudyGuidance.Web/ApiClient/'
  BACKEND_BASE_URL: 'https://studyGuidanceApiProd.azurewebsites.net'
  BACKEND_URL_QUIZ: 'https://studyGuidanceApiProd.azurewebsites.net/api/Quiz'
  BACKEND_URL_JOB: 'https://studyGuidanceApiProd.azurewebsites.net/api/Job'
  
  DOTNET_VERSION: '6.0'
  CONFIGURATION: Release
  AZURE_CORE_OUTPUT: 'none'

on:
  push:
    branches:
    - main
  pull_request:
    types:
    - closed
    branches:
    - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}


      - name: Set Backend URL
        run: |
          sed -i 's|"https://localhost:7109/api/Quiz"|"${{ env.BACKEND_URL_QUIZ }}"|g' "${{ env.FRONTEND_URL_LOCATTION }}QuizApiClient.cs"
          sed -i 's|"https://localhost:7109/api/Job"|"${{ env.BACKEND_URL_JOB }}"|g' "${{ env.FRONTEND_URL_LOCATTION }}JobApiClient.cs"

      - name: Restore
        run: dotnet restore "${{ env.WORKING_DIRECTORY_FRONTEND }}"

      - name: Build
        run: dotnet build "${{ env.WORKING_DIRECTORY_FRONTEND }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Publish
        run: dotnet publish "${{ env.WORKING_DIRECTORY_FRONTEND }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH_FRONTEND }}"
    

      - name: Set Database connection_string
        run: |
          sed -i 's|"Data Source=(localdb)\\\\MSSQLLocalDB;Database=StudyGuidanceDb;Integrated Security=True;TrustServerCertificate=True;"|"Server=tcp:StudyGuidance_prod.database.windows.net,1433;Initial Catalog=StudyGuidance;Persist Security Info=False;User ID=super;Password=${{secrets.DATABASE_PASSWORD_PROD}};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"|g' ./StudyGuidance/StudGuidance.Api/appsettings.json
          sed -i 's|"https://localhost:7063"|"${{ env.BACKEND_BASE_URL }}"|g' "${{ env.WORKING_DIRECTORY_BACKEND }}/Program.cs"
  
      - name: Restore-backend
        run: dotnet restore "${{ env.WORKING_DIRECTORY_BACKEND }}"

      - name: build-backend
        run: dotnet build "${{ env.WORKING_DIRECTORY_BACKEND }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Publish-backend
        run: dotnet publish "${{ env.WORKING_DIRECTORY_BACKEND }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH_BACKEND }}"


      - name: Publish frontend Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webapp-frontend
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_FRONTEND }}

      - name: Publish Artifacts Backend
        uses: actions/upload-artifact@v3
        with:
          name: webapp-backend
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_BACKEND }}

      - name: publish frontend to packages
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_FRONTEND }}
          tag_name: TEST_v${{ github.run_number }}
          body: |
            This is a test release
          draft: false
          prerelease: false
          token: ${{ secrets.TOKEN_GITHUB }}
  
  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: webapp-frontend
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_FRONTEND }}
          
      - name: deployment-frontend
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_FRONTEND }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_FRONTEND }}


      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: webapp-backend
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_BACKEND }}

      
      - name: deployment-backend
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_BACKEND }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH_BACKEND }}

      - name: curl backend voor warmup
        run: curl ${{ env.BACKEND_URL_QUIZ }}/questions

