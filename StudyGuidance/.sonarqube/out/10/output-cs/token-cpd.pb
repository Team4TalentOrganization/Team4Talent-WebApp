ó
úC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\ApiClient\BaseApiClient.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
	ApiClient %
{ 
public		 
abstract		 
class		 
BaseApiClient		 $
{

 
	protected 
readonly 

HttpClient 

HttpClient  *
;* +
	protected 
readonly 
ILogger 
< 
BaseApiClient *
>* +
Logger, 2
;2 3
	protected 
BaseApiClient 
( 

HttpClient $

httpClient% /
,/ 0
ILogger1 8
<8 9
BaseApiClient9 F
>F G
loggerH N
)N O
{ 

HttpClient 
= 

httpClient 
?? 
throw #
new$ '!
ArgumentNullException( =
(= >
nameof> D
(D E

httpClientE O
)O P
)P Q
;Q R
Logger 	
=
 
logger 
?? 
throw 
new !
ArgumentNullException  5
(5 6
nameof6 <
(< =
logger= C
)C D
)D E
;E F
} 
	protected 
async 
Task 
< 
T 
> 
GetJsonAsync &
<& '
T' (
>( )
() *
string* 0
endpoint1 9
)9 :
{ 
try 
{ 
return 

await 

HttpClient 
. 
GetFromJsonAsync ,
<, -
T- .
>. /
(/ 0
endpoint0 8
)8 9
;9 :
} 
catch 
(	 

	Exception
 
ex 
) 
{ 
Logger 

.
 
LogError 
( 
ex 
, 
$" 
$str J
{J K
endpointK S
}S T
$strT U
"U V
)V W
;W X
} 
return 	
default
 
; 
}   
}!! 
}"" Ö	
úC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\ApiClient\IJobApiClient.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
	ApiClient %
{ 
public 
	interface 
IJobApiClient 
{ 
Task 
< 
Job 

>
 
GetJobByIdAsync 
( 
int 
id  "
)" #
;# $
Task 
< 
List 
< 
Job 
> 
> 
GetJobsAsync 
( 
)  
;  !
Task		 
<		 
List		 
<		 
Job		 
>		 
>		  
GetJobsByFilterAsync		 &
(		& '
List		' +
<		+ ,
string		, 2
>		2 3

subdomains		4 >
,		> ?
bool		@ D

workInTeam		E O
,		O P
bool		Q U

workOnSite		V `
)		` a
;		a b
}

 
} Ü
ùC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\ApiClient\IQuizApiClient.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
	ApiClient %
{ 
public 

	interface 
IQuizApiClient #
{ 
Task 
< 
List 
< 
Question 
> 
> 
GetAllQuestions ,
(, -
)- .
;. /
Task 
< 
List 
< 
Question 
> 
> !
GetAllDomainQuestions 2
(2 3
)3 4
;4 5
Task		 
<		 
List		 
<		 
Question		 
>		 
>		 '
GetAllStandardQuizQuestions		 8
(		8 9
)		9 :
;		: ;
Task

 
<

 
List

 
<

 
Question

 
>

 
>

 %
GetAllTinderQuizQuestions

 6
(

6 7
)

7 8
;

8 9
Task 
< 
List 
< 
Option 
> 
> 
GetAllSubDomains +
(+ ,
), -
;- .
Task 
< 
List 
< 
Question 
> 
> 
GetSubdomains *
(* +
List+ /
</ 0
int0 3
>3 4
	domainIds5 >
)> ?
;? @
} 
} ˝!
õC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\ApiClient\JobApiClient.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
	ApiClient %
{ 
public 
class 
JobApiClient 
: 
BaseApiClient *
,* +
IJobApiClient, 9
{		 
private 	
string
 
_url 
= 
$" 
$str 8
"8 9
;9 :
public 
JobApiClient 
( 

HttpClient &

httpClient' 1
,1 2
ILogger3 :
<: ;
JobApiClient; G
>G H
loggerI O
)O P
:Q R
baseS W
(W X

httpClientX b
,b c
loggerd j
)j k
{ 
} 
public 
async 
Task 
< 
List 
< 
Option %
>% &
>& '
GetAllDomains( 5
(5 6
)6 7
{ 	
return 
await 
GetJsonAsync %
<% &
List& *
<* +
Option+ 1
>1 2
>2 3
(3 4
$"4 6
{6 7
_url7 ;
}; <
$str< D
"D E
)E F
;F G
} 	
public 
async 
Task 
< 
Job 
> 
GetJobByIdAsync .
(. /
int/ 2
id3 5
)5 6
{ 
return 	
await
 
GetJsonAsync 
< 
Job  
>  !
(! "
$"" $
{$ %
_url% )
}) *
$str* 7
{7 8
id8 :
}: ;
"; <
)< =
;= >
} 
public 
async 
Task 
< 
List 
< 
Job "
>" #
># $
GetJobsAsync% 1
(1 2
)2 3
{ 	
return 
await 
GetJsonAsync %
<% &
List& *
<* +
Job+ .
>. /
>/ 0
(0 1
$"1 3
{3 4
_url4 8
}8 9
$str9 >
"> ?
)? @
;@ A
} 	
public   
async   
Task   
<   
List   
<   
Job   "
>  " #
>  # $ 
GetJobsByFilterAsync  % 9
(  9 :
List  : >
<  > ?
string  ? E
>  E F

subdomains  G Q
,  Q R
bool  S W

workInTeam  X b
,  b c
bool  d h

workOnSite  i s
)  s t
{!! 	
string"" 
subdomainsParam"" "
=""# $
string""% +
.""+ ,
Join"", 0
(""0 1
$str""1 4
,""4 5

subdomains""6 @
.""@ A
Select""A G
(""G H
	subdomain""H Q
=>""R T
$"""U W
$str""W b
{""b c
	subdomain""c l
}""l m
"""m n
)""n o
)""o p
;""p q
string## 
url## 
=## 
$"## 
{## 
_url##  
}##  !
$str##! /
{##/ 0
subdomainsParam##0 ?
}##? @
$str##@ L
{##L M

workInTeam##M W
}##W X
$str##X d
{##d e

workOnSite##e o
}##o p
"##p q
;##q r
List$$ 
<$$ 
Job$$ 
>$$ 
result$$ 
=$$ 
await$$ $
GetJsonAsync$$% 1
<$$1 2
List$$2 6
<$$6 7
Job$$7 :
>$$: ;
>$$; <
($$< =
url$$= @
)$$@ A
;$$A B
return&& 
result&& 
??&& 
new&&  
List&&! %
<&&% &
Job&&& )
>&&) *
(&&* +
)&&+ ,
;&&, -
}'' 	
}(( 
})) †,
úC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\ApiClient\QuizApiClient.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
	ApiClient %
{ 
public 

class 
QuizApiClient 
:  
BaseApiClient! .
,. /
IQuizApiClient0 >
{ 
private		 
string		 
_url		 
=		 
$"		  
$str		  ?
"		? @
;		@ A
public 
QuizApiClient 
( 

HttpClient '

httpClient( 2
,2 3
ILogger4 ;
<; <
BaseApiClient< I
>I J
loggerK Q
)Q R
:S T
baseU Y
(Y Z

httpClientZ d
,d e
loggerf l
)l m
{ 	
} 	
public 
async 
Task 
< 
List 
< 
Question '
>' (
>( )!
GetAllDomainQuestions* ?
(? @
)@ A
{ 	
return 
await 
GetJsonAsync %
<% &
List& *
<* +
Question+ 3
>3 4
>4 5
(5 6
$"6 8
{8 9
_url9 =
}= >
$str> N
"N O
)O P
;P Q
} 	
public 
async 
Task 
< 
List 
< 
Question '
>' (
>( )
GetAllQuestions* 9
(9 :
): ;
{ 	
return 
await 
GetJsonAsync %
<% &
List& *
<* +
Question+ 3
>3 4
>4 5
(5 6
$"6 8
{8 9
_url9 =
}= >
$str> H
"H I
)I J
;J K
} 	
public 
async 
Task 
< 
List 
< 
Question '
>' (
>( )'
GetAllStandardQuizQuestions* E
(E F
)F G
{ 	
return 
await 
GetJsonAsync %
<% &
List& *
<* +
Question+ 3
>3 4
>4 5
(5 6
$"6 8
{8 9
_url9 =
}= >
$str> T
"T U
)U V
;V W
} 	
public 
async 
Task 
< 
List 
< 
Question '
>' (
>( )%
GetAllTinderQuizQuestions* C
(C D
)D E
{ 	
return   
await   
GetJsonAsync   %
<  % &
List  & *
<  * +
Question  + 3
>  3 4
>  4 5
(  5 6
$"  6 8
{  8 9
_url  9 =
}  = >
$str  > R
"  R S
)  S T
;  T U
}!! 	
public"" 
async"" 
Task"" 
<"" 
List"" 
<"" 
Option"" %
>""% &
>""& '
GetAllSubDomains""( 8
(""8 9
)""9 :
{## 	
return$$ 
await$$ 
GetJsonAsync$$ %
<$$% &
List$$& *
<$$* +
Option$$+ 1
>$$1 2
>$$2 3
($$3 4
$str$$4 d
)$$d e
;$$e f
}%% 	
public'' 
async'' 
Task'' 
<'' 
List'' 
<'' 
Question'' '
>''' (
>''( )
GetSubdomains''* 7
(''7 8
List''8 <
<''< =
int''= @
>''@ A
	domainIds''B K
)''K L
{(( 	
StringBuilder)) 
endpointBuilder)) )
=))* +
new)), /
StringBuilder))0 =
())= >
)))> ?
;))? @
endpointBuilder** 
.** 
Append** "
(**" #
_url**# '
)**' (
;**( )
endpointBuilder++ 
.++ 
Append++ "
(++" #
$str++# 1
)++1 2
;++2 3
bool,, 
isFirstDomain,, 
=,,  
true,,! %
;,,% &
foreach.. 
(.. 
int.. 
domainId.. !
in.." $
	domainIds..% .
)... /
{// 
if00 
(00 
!00 
isFirstDomain00 "
)00" #
{11 
endpointBuilder22 #
.22# $
Append22$ *
(22* +
$str22+ .
)22. /
;22/ 0
}33 
endpointBuilder55 
.55  
Append55  &
(55& '
$"55' )
$str55) 2
{552 3
domainId553 ;
}55; <
"55< =
)55= >
;55> ?
isFirstDomain77 
=77 
false77  %
;77% &
}88 
string:: 
endpointString:: !
=::" #
endpointBuilder::$ 3
.::3 4
ToString::4 <
(::< =
)::= >
;::> ?
return<< 
await<< 
GetJsonAsync<< %
<<<% &
List<<& *
<<<* +
Question<<+ 3
><<3 4
><<4 5
(<<5 6
endpointString<<6 D
)<<D E
;<<E F
}== 	
}>> 
}?? Ì
èC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Models\Job.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Models "
{ 
public 

class 
Job 
{ 
public 
string 
? 
Name 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Domain 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
	SubDomain  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Description "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
bool		 

WorkInTeam		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
bool

 

WorkOnSite

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
int 
JobId 
{ 
get 
; 
set  #
;# $
}% &
} 
} È
íC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Models\Option.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Models "
{ 
public 

class 
Option 
{ 
public 
string 
Content 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
OptionRelation !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 

QuestionId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
OptionId 
{ 
get !
;! "
set# &
;& '
}( )
}		 
}

 ˇ
îC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Models\Question.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Models "
{ 
public 

class 
Question 
{ 
public 
List 
< 
Option 
> 
Options #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
int 

QuestionId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Phrase 
{ 
get "
;" #
set$ '
;' (
}) *
} 
}		 î
ûC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Pages\JobDetailPage.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Pages !
{ 
public 
partial 
class 
JobDetailPage #
:$ %
ComponentBase& 3
{ 
[ 
	Parameter 
] 
public 
int	 
Id 
{ 
get 
; 
set 
; 
} 
}		 
}

 á
ïC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Pages\Jobs.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Pages !
{ 
public 

partial 
class 
Jobs 
: 
ComponentBase  -
{ 
[ 	
	Parameter	 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
}		 
}

 ì
åC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Program.cs
var		 
builder		 
=		 "
WebAssemblyHostBuilder		 $
.		$ %
CreateDefault		% 2
(		2 3
args		3 7
)		7 8
;		8 9
builder

 
.

 
RootComponents

 
.

 
Add

 
<

 
App

 
>

 
(

  
$str

  &
)

& '
;

' (
builder 
. 
RootComponents 
. 
Add 
< 

HeadOutlet %
>% &
(& '
$str' 4
)4 5
;5 6
builder 
. 
Services 
. 
AddMudServices 
(  
)  !
;! "
builder 
. 
Services 
. 
	Configure 
< 
AnimationOptions +
>+ ,
(, -
Guid- 1
.1 2
NewGuid2 9
(9 :
): ;
.; <
ToString< D
(D E
)E F
,F G
cH I
=>J L
{M N
}O P
)P Q
;Q R
builder 
. 
Services 
. 
	AddScoped 
( 
sp 
=>  
new! $

HttpClient% /
{0 1
BaseAddress2 =
=> ?
new@ C
UriD G
(G H
builderH O
.O P
HostEnvironmentP _
._ `
BaseAddress` k
)k l
}m n
)n o
;o p
builder 
. 
Services 
. 
	AddScoped 
< 
IJobApiClient (
,( )
JobApiClient* 6
>6 7
(7 8
)8 9
;9 :
builder 
. 
Services 
. 
	AddScoped 
< 
IQuizApiClient )
,) *
QuizApiClient+ 8
>8 9
(9 :
): ;
;; <
builder 
. 
Services 
. 
AddBlazorBootstrap #
(# $
)$ %
;% &
await 
builder 
. 
Build 
( 
) 
. 
RunAsync 
( 
)  
;  !∆
üC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\HomepageHeroe.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{ 
public 

partial 
class 
HomepageHeroe &
:' (
ComponentBase) 6
{ 
private		 
int		 
selectedIndex		 !
=		" #
$num		$ %
;		% &
public 
int 
SelectedIndex  
{ 	
get 
{ 
return 
selectedIndex &
;& '
}( )
set 
{ 
selectedIndex 
=  !
value" '
;' (
}) *
} 	
private 
bool 
_arrows 
= 
false $
;$ %
private 
bool 
_bullets 
= 
true  $
;$ %
private 
bool 
_enableSwipeGesture (
=) *
true+ /
;/ 0
private 
bool 

_autocycle 
=  !
true" &
;& '
private 
IList 
< 
string 
> 
_source %
=& '
new( +
List, 0
<0 1
string1 7
>7 8
(8 9
)9 :
{ 	
$str !
,! "
$str !
,! "
$str !
,! "
} 	
;	 

private 
IList 
< 
string 
> 
_text #
=$ %
new& )
List* .
<. /
string/ 5
>5 6
(6 7
)7 8
{ 	
$str @
,@ A
$str T
,T U
$str V
,V W
}   	
;  	 

}## 
}$$ ç
öC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\JobCards.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{ 
public 

partial 
class 
JobCards !
:" #
ComponentBase$ 1
{ 
[ 	
	Parameter	 
] 
public		 
Job		 
Job		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
}

 
} „

õC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\JobDetail.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{ 
public 

partial 
class 
	JobDetail "
:# $
ComponentBase% 2
{ 
[		 	
	Parameter			 
]		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
private 
Job 
Job 
; 
	protected 
override 
async  
Task! % 
OnParametersSetAsync& :
(: ;
); <
{ 	
Job 
= 
await 
JobApiClient $
.$ %
GetJobByIdAsync% 4
(4 5
Id5 7
)7 8
;8 9
} 	
private 
async 
Task 
GoBackToOverview +
(+ ,
), -
{ 	
await 
	JSRuntime 
. 
InvokeVoidAsync +
(+ ,
$str, :
): ;
;; <
} 	
} 
} ¸W
ùC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\JobOverview.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{		 
public

 

partial

 
class

 
JobOverview

 $
:

% &
ComponentBase

' 4
{ 
[ 	
	Parameter	 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
private 
Collapse 
	collapse1 "
=# $
default% ,
!, -
;- .
private 
Boolean 
showFilterMenu &
;& '
private 
async 
Task 
ShowContentAsync +
(+ ,
), -
=>. 0
await1 6
	collapse17 @
.@ A
	ShowAsyncA J
(J K
)K L
;L M
private 
async 
Task 
HideContentAsync +
(+ ,
), -
=>. 0
await1 6
	collapse17 @
.@ A
	HideAsyncA J
(J K
)K L
;L M
private 
async 
Task 
ToggleContentAsync -
(- .
). /
=>0 2
await3 8
	collapse19 B
.B C
ToggleAsyncC N
(N O
)O P
;P Q
private 
bool $
multiselectionTextChoice -
;- .
private 
string 
value 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
$str- ?
;? @
private 
IEnumerable 
< 
string "
>" #
options$ +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
=: ;
new< ?
HashSet@ G
<G H
stringH N
>N O
(O P
)P Q
;Q R
private 
string 
_immediateText %
=& '
$str( *
;* +
private 
List 
< 
Job 
> 
jobs 
=  
new! $
List% )
<) *
Job* -
>- .
(. /
)/ 0
;0 1
private 
List 
< 
Option 
> 

subDomains '
=( )
new* -
List. 2
<2 3
Option3 9
>9 :
(: ;
); <
;< =
bool 
showNoJobsMessage 
; 
private 
List 
< 
Job 
> 
FilteredJobs &
{ 	
get 
{ 
if 
( 
string 
. 
IsNullOrWhiteSpace -
(- .
_immediateText. <
)< =
)= >
{ 
return   
options   "
.  " #
Any  # &
(  & '
)  ' (
?!! 
jobs!! 
.!! 
Where!! $
(!!$ %
job!!% (
=>!!) +
options!!, 3
.!!3 4
Contains!!4 <
(!!< =
job!!= @
.!!@ A
	SubDomain!!A J
.!!J K
ToUpper!!K R
(!!R S
)!!S T
)!!T U
)!!U V
.!!V W
ToList!!W ]
(!!] ^
)!!^ _
:"" 
jobs"" 
."" 
ToList"" %
(""% &
)""& '
;""' (
}## 
else$$ 
{%% 
return&& 
options&& "
.&&" #
Any&&# &
(&&& '
)&&' (
?'' 
jobs'' 
.'' 
Where'' $
(''$ %
job''% (
=>'') +
options'', 3
.''3 4
Contains''4 <
(''< =
job''= @
.''@ A
	SubDomain''A J
.''J K
ToUpper''K R
(''R S
)''S T
)''T U
&&''V X
job''Y \
.''\ ]
Name''] a
.''a b
ToLower''b i
(''i j
)''j k
.''k l
Contains''l t
(''t u
_immediateText	''u É
.
''É Ñ
ToLower
''Ñ ã
(
''ã å
)
''å ç
)
''ç é
)
''é è
.
''è ê
ToList
''ê ñ
(
''ñ ó
)
''ó ò
:(( 
jobs(( 
.(( 
Where(( $
((($ %
job((% (
=>(() +
job((, /
.((/ 0
Name((0 4
.((4 5
ToLower((5 <
(((< =
)((= >
.((> ?
Contains((? G
(((G H
_immediateText((H V
.((V W
ToLower((W ^
(((^ _
)((_ `
)((` a
)((a b
.((b c
ToList((c i
(((i j
)((j k
;((k l
})) 
}** 
}++ 	
	protected-- 
override-- 
void-- 
OnParametersSet--  /
(--/ 0
)--0 1
{.. 	
if// 
(// 
this// 
.// 
Name// 
==// 
$str// &
)//& '
{00 
this11 
.11 
showFilterMenu11 #
=11$ %
true11& *
;11* +
}22 
else33 
{44 
this55 
.55 
showFilterMenu55 #
=55$ %
false55& +
;55+ ,
}66 
base88 
.88 
OnParametersSet88  
(88  !
)88! "
;88" #
}99 	
private;; 
void;; 
GoToJobDetailPage;; &
(;;& '
MouseEventArgs;;' 5
e;;6 7
,;;7 8
int;;9 <
id;;= ?
);;? @
{<< 	
NavigationManager== 
.== 

NavigateTo== (
(==( )
$"==) +
$str==+ 8
{==8 9
id==9 ;
}==; <
"==< =
)=== >
;==> ?
}>> 	
private@@ 
string@@ !
GetMultiSelectionText@@ ,
(@@, -
List@@- 1
<@@1 2
string@@2 8
>@@8 9
selectedValues@@: H
)@@H I
{AA 	
ifBB 
(BB 
selectedValuesBB 
.BB 
CountBB $
==BB% '
$numBB( )
)BB) *
{CC 
returnDD 
$"DD 
{DD 
selectedValuesDD (
.DD( )
CountDD) .
}DD. /
$strDD/ I
"DDI J
;DDJ K
}EE 
elseFF 
{GG 
returnHH 
$"HH 
{HH 
selectedValuesHH (
.HH( )
CountHH) .
}HH. /
$strHH/ M
"HHM N
;HHN O
}II 
}KK 	
	protectedMM 
overrideMM 
asyncMM  
TaskMM! %
OnInitializedAsyncMM& 8
(MM8 9
)MM9 :
{NN 	
varQQ 
uriQQ 
=QQ 
newQQ 
UriQQ 
(QQ 
NavigationManagerQQ /
.QQ/ 0
UriQQ0 3
)QQ3 4
;QQ4 5
varTT 
queryParamsTT 
=TT 
SystemTT $
.TT$ %
WebTT% (
.TT( )
HttpUtilityTT) 4
.TT4 5
ParseQueryStringTT5 E
(TTE F
uriTTF I
.TTI J
QueryTTJ O
)TTO P
;TTP Q
varUU 
answersParamUU 
=UU 
queryParamsUU *
.UU* +
GetUU+ .
(UU. /
$strUU/ 8
)UU8 9
;UU9 :
varVV 
workInTeamParamVV 
=VV  !
queryParamsVV" -
.VV- .
GetVV. 1
(VV1 2
$strVV2 >
)VV> ?
;VV? @
varWW 
workOnSiteParamWW 
=WW  !
queryParamsWW" -
.WW- .
GetWW. 1
(WW1 2
$strWW2 >
)WW> ?
;WW? @
ListXX 
<XX 
stringXX 
>XX 
answersXX  
=XX! "
newXX# &
ListXX' +
<XX+ ,
stringXX, 2
>XX2 3
(XX3 4
)XX4 5
;XX5 6
answersYY 
=YY 
answersParamYY "
?YY" #
.YY# $
SplitYY$ )
(YY) *
$charYY* -
)YY- .
.YY. /
ToListYY/ 5
(YY5 6
)YY6 7
;YY7 8
boolZZ 

workInTeamZZ 
;ZZ 

workInTeam[[ 
=[[ 
bool[[ 
.[[ 
TryParse[[ &
([[& '
workInTeamParam[[' 6
,[[6 7
out[[8 ;
var[[< ?
workInTeamValue[[@ O
)[[O P
?[[Q R
workInTeamValue[[S b
:[[c d
false[[e j
;[[j k
bool\\ 

workOnSite\\ 
;\\ 

workOnSite]] 
=]] 
bool]] 
.]] 
TryParse]] &
(]]& '
workOnSiteParam]]' 6
,]]6 7
out]]8 ;
var]]< ?
workOnSiteValue]]@ O
)]]O P
?]]Q R
workOnSiteValue]]S b
:]]c d
false]]e j
;]]j k
if__ 
(__ 
this__ 
.__ 
Name__ 
==__ 
$str__ &
)__& '
{`` 
jobsaa 
=aa 
awaitaa 
JobApiClientaa )
.aa) *
GetJobsAsyncaa* 6
(aa6 7
)aa7 8
;aa8 9

subDomainsbb 
=bb 
awaitbb "
QuizApiClientbb# 0
.bb0 1
GetAllSubDomainsbb1 A
(bbA B
)bbB C
;bbC D
}cc 
elsedd 
{ee 
jobsgg 
=gg 
awaitgg 
JobApiClientgg )
.gg) * 
GetJobsByFilterAsyncgg* >
(gg> ?
answersgg? F
,ggF G

workInTeamggH R
,ggR S

workOnSiteggT ^
)gg^ _
;gg_ `

subDomainshh 
=hh 
awaithh "
QuizApiClienthh# 0
.hh0 1
GetAllSubDomainshh1 A
(hhA B
)hhB C
;hhC D
ifii 
(ii 
jobsii 
==ii 
nullii  
||ii! #
!ii$ %
jobsii% )
.ii) *
Anyii* -
(ii- .
)ii. /
||ii0 2
jobsii3 7
.ii7 8
Countii8 =
==ii> @
$numiiA B
)iiB C
{jj 
showNoJobsMessagekk %
=kk& '
truekk( ,
;kk, -
}ll 
elsemm 
{nn 
showNoJobsMessageoo %
=oo& '
falseoo( -
;oo- .
}pp 
}qq 
}rr 	
}ss 
}tt „
ôC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\NavMenu.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{ 
public 

partial 
class 
NavMenu  
:! "
ComponentBase# 0
{ 
private 
bool 
collapseNavMenu $
=% &
true' +
;+ ,
private		 
string		 
?		 
NavMenuCssClass		 '
=>		( *
collapseNavMenu		+ :
?		; <
$str		= G
:		H I
null		J N
;		N O
private 
string 
navStyle 
=  !
$str" O
;O P
private 
string 
destinationUrl %
=& '
String( .
.. /
Empty/ 4
;4 5
private 
void 
ToggleNavMenu "
(" #
)# $
{ 	
collapseNavMenu 
= 
! 
collapseNavMenu .
;. /
navStyle 
= 
collapseNavMenu &
?' (
$str) U
:V W
$str	X Å
;
Å Ç
} 	
public 
Guid 
Guid 
= 
Guid 
.  
NewGuid  '
(' (
)( )
;) *
public 
string 
ModalDisplay "
=# $
$str% ,
;, -
public 
string 

ModalClass  
=! "
$str# %
;% &
public 
bool 
ShowBackdrop  
=! "
false# (
;( )
public 
void 
Open 
( 
string 
destinationUrl  .
). /
{ 	
if 
( 
NavigationManager !
.! "
Uri" %
.% &
Contains& .
(. /
$str/ 6
)6 7
)7 8
{ 
this 
. 
destinationUrl #
=$ %
destinationUrl& 4
;4 5
ModalDisplay 
= 
$str '
;' (

ModalClass   
=   
$str   #
;  # $
ShowBackdrop!! 
=!! 
true!! #
;!!# $
StateHasChanged"" 
(""  
)""  !
;""! "
}## 
else$$ 
{%% 
this&& 
.&& 
destinationUrl&& #
=&&$ %
destinationUrl&&& 4
;&&4 5
	UriHelper'' 
.'' 

NavigateTo'' $
(''$ %
this''% )
.'') *
destinationUrl''* 8
)''8 9
;''9 :
}(( 
})) 	
public++ 
void++ 
Close++ 
(++ 
)++ 
{,, 	
ModalDisplay-- 
=-- 
$str-- !
;--! "

ModalClass.. 
=.. 
$str.. 
;.. 
ShowBackdrop// 
=// 
false//  
;//  !
StateHasChanged00 
(00 
)00 
;00 
}11 	
public33 
void33 
CloseAndRouteTo33 #
(33# $
)33$ %
{44 	
ModalDisplay55 
=55 
$str55 !
;55! "

ModalClass66 
=66 
$str66 
;66 
ShowBackdrop77 
=77 
false77  
;77  !
StateHasChanged88 
(88 
)88 
;88 
	UriHelper99 
.99 

NavigateTo99  
(99  !
this99! %
.99% &
destinationUrl99& 4
)994 5
;995 6
}:: 	
};; 
}<< ﬂ.
ùC:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\PlayerCards.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{ 
public 

partial 
class 
PlayerCards $
:% &
ComponentBase' 4
{ 
private 
List 
< 
PlayerModel  
>  !
players" )
=* +
new, /
List0 4
<4 5
PlayerModel5 @
>@ A
{ 
new		 
PlayerModel		 
{		 
Name		 
=		  
$str		! )
,		) *
Description		+ 6
=		6 7
$str			7 î
,
		î ï
	ImagePath
		ñ ü
=
		† °
$str
		¢ µ
,
		µ ∂
	ShowFront
		∑ ¿
=
		¡ ¬
true
		√ «
,
		« »

ImageStyle
		… ”
=
		‘ ’
$str
		÷ Ú
,
		Ú Û
HrStyle
		Ù ˚
=
		˚ ¸
$str
		˝ √
,
		√ ƒ
HrStyleBack
		≈ –
=
		– —
$str
		— ¸
,
		¸ ˝
CardBodyStyle
		˛ ã
=
		ã å
$str
		å é
,
		é è
DivStyle
		ê ò
=
		ò ô
$str
		ô õ
}
		ú ù
,
		ù û
new

 
PlayerModel

 
{

 
Name

 
=

  
$str

! *
,

* +
Description

, 7
=

7 8
$str	

8 å
,


å ç
	ImagePath


é ó
=


ò ô
$str


ö ´
,


´ ¨
	ShowFront


≠ ∂
=


∑ ∏
true


π Ω
,


Ω æ

ImageStyle


ø …
=


  À
$str


Ã Ë
,


Ë È
HrStyle


Í Ò
=


Ò Ú
$str


Û π
,


π ∫
HrStyleBack


ª ∆
=


∆ «
$str


« Ú
,


Ú Û
CardBodyStyle


Ù Å
=


Å Ç
$str


Ç Ñ
,


Ñ Ö
DivStyle


Ü é
=


é è
$str


è ë
}


í ì
,


ì î
new 
PlayerModel 
{ 
Name 
=  
$str! (
,( )
Description* 5
=5 6
$str	6 Ä
,
Ä Å
	ImagePath
Ç ã
=
å ç
$str
é †
,
† °
	ShowFront
¢ ´
=
¨ ≠
true
Æ ≤
,
≤ ≥

ImageStyle
¥ æ
=
ø ¿
$str
¡ ›
,
› ﬁ
HrStyle
ﬂ Ê
=
Ê Á
$str
Ë Æ
,
Æ Ø
HrStyleBack
∞ ª
=
ª º
$str
º Á
,
Á Ë
CardBodyStyle
È ˆ
=
ˆ ˜
$str
˜ ˘
,
˘ ˙
DivStyle
˚ É
=
É Ñ
$str
Ñ Ü
}
á à
,
à â
} 
; 
private 
void 
FlipCard 
( 
PlayerModel )
player* 0
)0 1
{ 	
player 
. 
	ShowFront 
= 
!  
player  &
.& '
	ShowFront' 0
;0 1
player 
. 

ImageStyle 
= 
player  &
.& '
	ShowFront' 0
? 
$str	 î
: 
$str	 ò
;
ò ô
player 
. 
HrStyle 
= 
player #
.# $
	ShowFront$ -
?. /
$str0 v
:w x
$str	y •
;
• ¶
player 
. 
HrStyleBack 
=  
!! "
player" (
.( )
	ShowFront) 2
?3 4
$str5 {
:| }
$str	~ ©
;
© ™
player 
. 
CardBodyStyle  
=! "
!# $
player$ *
.* +
	ShowFront+ 4
?5 6
$str7 G
:H I
$strJ L
;L M
player 
. 
DivStyle 
= 
player $
.$ %
	ShowFront% .
? 
$str	 î
: 
$str	 ò
;
ò ô
} 	
public 
class 
PlayerModel  
{ 	
public 
string 
Name 
{  
get! $
;$ %
set& )
;) *
}+ ,
public   
string   
	ImagePath   #
{  $ %
get  & )
;  ) *
set  + .
;  . /
}  0 1
public!! 
bool!! 
	ShowFront!! !
{!!" #
get!!$ '
;!!' (
set!!) ,
;!!, -
}!!. /
public"" 
string"" 

ImageStyle"" $
{""% &
get""' *
;""* +
set"", /
;""/ 0
}""1 2
public## 
string## 
HrStyle## !
{##" #
get##$ '
;##' (
set##) ,
;##, -
}##. /
public$$ 
string$$ 
HrStyleBack$$ %
{$$& '
get$$( +
;$$+ ,
set$$- 0
;$$0 1
}$$2 3
public%% 
string%% 
CardBodyStyle%% '
{%%( )
get%%* -
;%%- .
set%%/ 2
;%%2 3
}%%4 5
public&& 
string&& 
Description&& %
{&&& '
get&&( +
;&&+ ,
set&&- 0
;&&0 1
}&&2 3
public'' 
string'' 
DivStyle'' "
{''# $
get''% (
;''( )
set''* -
;''- .
}''/ 0
}(( 	
})) 
}** „ë
¶C:\Users\Gebruiker\OneDrive - PXL\Documenten\pxl\3AONb\IT-project\NieuwProject\Team4Talent-WebApp\StudyGuidance\StudyGuidance.Web\Shared\StandardQuestionCard.razor.cs
	namespace 	
StudyGuidance
 
. 
Web 
. 
Shared "
{ 
public 

partial 
class  
StandardQuestionCard -
:. /
ComponentBase0 =
{ 
private		 
bool		 
StandardQuizEnded		 &
=		' (
false		) .
;		. /
private

 
int

 
currentQuestion

 #
=

$ %
$num

& '
;

' (
private 
List 
< 
Question 
> 
questionsList ,
=- .
new/ 2
List3 7
<7 8
Question8 @
>@ A
(A B
)B C
;C D
private 
List 
< 
int 
> 
domainAnswers '
=( )
new* -
List. 2
<2 3
int3 6
>6 7
(7 8
)8 9
;9 :
private 
List 
< 
int 
> 
subDomainAnswers *
=+ ,
new- 0
List1 5
<5 6
int6 9
>9 :
(: ;
); <
;< =
private 
List 
< 
Question 
> 
selectedDomains .
=/ 0
new1 4
List5 9
<9 :
Question: B
>B C
(C D
)D E
;E F
private 
bool 
subDomainsAreSet %
=& '
false( -
;- .
private 
bool 
EndButtonDisabled &
=' (
false) .
;. /
private 
string 
[ 
] 
CardClasses $
=% &
new' *
string+ 1
[1 2
$num2 3
]3 4
{5 6
$str7 R
,R S
$strT o
,o p
$str	q å
,
å ç
$str
é ©
}
™ ´
;
´ ¨
private 
async 
Task 
	MouseOver $
($ %
int% (

cardNumber) 3
)3 4
{ 	
await 
SetCardClass 
( 

cardNumber )
,) *
CardClasses+ 6
[6 7

cardNumber7 A
]A B
.B C
ContainsC K
(K L
$strL c
)c d
?e f
$str	g ò
:
ô ö
$str
õ ∆
)
∆ «
;
« »
} 	
private 
async 
Task 
MouseOut #
(# $
int$ '

cardNumber( 2
)2 3
{ 	
await 
SetCardClass 
( 

cardNumber )
,) *
CardClasses+ 6
[6 7

cardNumber7 A
]A B
.B C
ContainsC K
(K L
$strL c
)c d
?e f
$str	g ò
:
ô ö
$str
õ ∂
)
∂ ∑
;
∑ ∏
} 	
private 
async 
Task 
SetCardClass '
(' (
int( +

cardNumber, 6
,6 7
string8 >
cssClass? G
)G H
{ 	
CardClasses   
[   

cardNumber   "
]  " #
=  $ %
cssClass  & .
;  . /
}!! 	
private## 
void## 
CardClicked##  
(##  !
int##! $

cardNumber##% /
)##/ 0
{$$ 	
if&& 
(&& 
!&& 
IsOptionValueEmpty&& #
(&&# $(
GetOptionsForCurrentQuestion&&$ @
(&&@ A
)&&A B
[&&B C

cardNumber&&C M
]&&M N
)&&N O
)&&O P
{'' 
if)) 
()) 
CardClasses)) 
[))  

cardNumber))  *
]))* +
.))+ ,
Contains)), 4
())4 5
$str))5 L
)))L M
)))M N
{** 
CardClasses++ 
[++  

cardNumber++  *
]++* +
=++, -
$str++. I
;++I J
},, 
else-- 
{.. 
CardClasses// 
[//  

cardNumber//  *
]//* +
=//, -
$str//. _
;//_ `
}00 
}11 
else22 
{33 
CardClasses44 
[44 

cardNumber44 &
]44& '
=44( )
$str44* E
;44E F
}55 
}66 	
private88 
List88 
<88 
string88 
>88 (
GetOptionsForCurrentQuestion88 9
(889 :
)88: ;
{99 	
return:: 
GetQuestionAtIndex:: %
(::% &
currentQuestion::& 5
)::5 6
?::6 7
.::7 8
Options::8 ?
.::? @
Select::@ F
(::F G
option::G M
=>::N P
option::Q W
.::W X
Content::X _
)::_ `
.::` a
ToList::a g
(::g h
)::h i
??::j l
new::m p
List::q u
<::u v
string::v |
>::| }
(::} ~
)::~ 
;	:: Ä
};; 	
private== 
List== 
<== 
int== 
>== )
GetOptionIdForCurrentQuestion== 7
(==7 8
)==8 9
{>> 	
return?? 
GetQuestionAtIndex?? %
(??% &
currentQuestion??& 5
)??5 6
???6 7
.??7 8
Options??8 ?
.??? @
Select??@ F
(??F G
option??G M
=>??N P
option??Q W
.??W X
OptionId??X `
)??` a
.??a b
ToList??b h
(??h i
)??i j
????k m
new??n q
List??r v
<??v w
int??w z
>??z {
(??{ |
)??| }
;??} ~
}@@ 	
privateBB 
stringBB $
GetCurrentQuestionPhraseBB /
(BB/ 0
)BB0 1
{CC 	
returnDD 
GetQuestionAtIndexDD %
(DD% &
currentQuestionDD& 5
)DD5 6
?DD6 7
.DD7 8
PhraseDD8 >
??DD? A
stringDDB H
.DDH I
EmptyDDI N
;DDN O
}EE 	
privateGG 
stringGG !
GetNextQuestionPhraseGG ,
(GG, -
)GG- .
{HH 	
returnII 
GetQuestionAtIndexII %
(II% &
currentQuestionII& 5
+II6 7
$numII8 9
)II9 :
?II: ;
.II; <
PhraseII< B
??IIC E
stringIIF L
.IIL M
EmptyIIM R
;IIR S
}JJ 	
privateLL 
QuestionLL 
GetQuestionAtIndexLL +
(LL+ ,
intLL, /
indexLL0 5
)LL5 6
{MM 	
returnNN 
(NN 
indexNN 
>=NN 
$numNN 
&&NN !
indexNN" '
<NN( )
questionsListNN* 7
.NN7 8
CountNN8 =
)NN= >
?NN? @
questionsListNNA N
[NNN O
indexNNO T
]NNT U
:NNV W
nullNNX \
;NN\ ]
}OO 	
privateRR 
asyncRR 
TaskRR 
NextQuestionClickedRR .
(RR. /
)RR/ 0
{SS 	
forTT 
(TT 
intTT 
iTT 
=TT 
$numTT 
;TT 
iTT 
<TT 
$numTT  !
;TT! "
iTT# $
++TT$ &
)TT& '
{UU 
ifVV 
(VV 
CardClassesVV 
[VV  
iVV  !
]VV! "
==VV# %
$strVV& W
)VVW X
{WW 
domainAnswersXX !
.XX! "
AddXX" %
(XX% &)
GetOptionIdForCurrentQuestionXX& C
(XXC D
)XXD E
[XXE F
iXXF G
]XXG H
)XXH I
;XXI J
ifZZ 
(ZZ 
subDomainsAreSetZZ (
)ZZ( )
{[[ 
subDomainAnswers\\ (
.\\( )
Add\\) ,
(\\, -)
GetOptionIdForCurrentQuestion\\- J
(\\J K
)\\K L
[\\L M
i\\M N
]\\N O
)\\O P
;\\P Q
}]] 
}^^ 
}__ 
ifaa 
(aa 
currentQuestionaa 
==aa  "
questionsListaa# 0
.aa0 1
Countaa1 6
-aa7 8
$numaa9 :
&&aa; =
!aa> ?
subDomainsAreSetaa? O
)aaO P
{bb 
selectedDomainscc 
=cc  !
awaitcc" '
QuizApiClientcc( 5
.cc5 6
GetSubdomainscc6 C
(ccC D
domainAnswersccD Q
)ccQ R
;ccR S
vardd $
questionsWithEmptyOptiondd ,
=dd- .
newdd/ 2
Listdd3 7
<dd7 8
Questiondd8 @
>dd@ A
(ddA B
)ddB C
;ddC D
varee 
modifiedQuestionsee %
=ee& '
newee( +
Listee, 0
<ee0 1
Questionee1 9
>ee9 :
(ee: ;
)ee; <
;ee< =
foreachgg 
(gg 
vargg 
selectedDomaingg +
ingg, .
selectedDomainsgg/ >
)gg> ?
{hh 
ifii 
(ii 
selectedDomainii &
.ii& '
Optionsii' .
.ii. /
Anyii/ 2
(ii2 3
optionii3 9
=>ii: <
stringii= C
.iiC D
IsNullOrEmptyiiD Q
(iiQ R
optioniiR X
.iiX Y
ContentiiY `
)ii` a
)iia b
)iib c
{jj $
questionsWithEmptyOptionkk 0
.kk0 1
Addkk1 4
(kk4 5
selectedDomainkk5 C
)kkC D
;kkD E
}ll 
elsemm 
{nn 
modifiedQuestionsoo )
.oo) *
Addoo* -
(oo- .
selectedDomainoo. <
)oo< =
;oo= >
}pp 
}qq 
modifiedQuestionsss !
.ss! "
AddRangess" *
(ss* +$
questionsWithEmptyOptionss+ C
)ssC D
;ssD E
foreachuu 
(uu 
varuu 
questionuu %
inuu& (
modifiedQuestionsuu) :
)uu: ;
{vv 
whileww 
(ww 
questionww #
.ww# $
Optionsww$ +
.ww+ ,
Countww, 1
<ww2 3
$numww4 5
)ww5 6
{xx 
questionyy  
.yy  !
Optionsyy! (
.yy( )
Addyy) ,
(yy, -
newyy- 0
Optionyy1 7
(yy7 8
)yy8 9
)yy9 :
;yy: ;
}zz 
}{{ 
questionsList}} 
.}} 
AddRange}} &
(}}& '
modifiedQuestions}}' 8
)}}8 9
;}}9 :
subDomainsAreSet  
=! "
true# '
;' (
}
ÄÄ 
ResetCardClasses
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
currentQuestion
ÑÑ 
++
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
private
áá 
void
áá %
PreviousQuestionClicked
áá ,
(
áá, -
)
áá- .
{
àà 	
if
ââ 
(
ââ 
currentQuestion
ââ 
>
ââ  !
$num
ââ" #
)
ââ# $
{
ää 
currentQuestion
ãã 
--
ãã !
;
ãã! "
if
åå 
(
åå &
GetCurrentQuestionPhrase
åå ,
(
åå, -
)
åå- .
==
åå/ 1
$str
åå2 T
)
ååT U
{
çç 
questionsList
éé !
.
éé! "
	RemoveAll
éé" +
(
éé+ ,
	questions
éé, 5
=>
éé6 8
	questions
éé9 B
.
ééB C
Phrase
ééC I
.
ééI J
Contains
ééJ R
(
ééR S
$str
ééS x
)
ééx y
)
ééy z
;
ééz {
subDomainsAreSet
èè $
=
èè% &
false
èè' ,
;
èè, -
domainAnswers
êê !
.
êê! "
Clear
êê" '
(
êê' (
)
êê( )
;
êê) *
}
ëë 
ResetCardClasses
íí  
(
íí  !
)
íí! "
;
íí" #
}
ìì 
}
îî 	
private
ññ 
void
ññ 
ResetCardClasses
ññ %
(
ññ% &
)
ññ& '
{
óó 	
for
òò 
(
òò 
int
òò 
i
òò 
=
òò 
$num
òò 
;
òò 
i
òò 
<
òò 
CardClasses
òò  +
.
òò+ ,
Length
òò, 2
;
òò2 3
i
òò4 5
++
òò5 7
)
òò7 8
{
ôô 
CardClasses
öö 
[
öö 
i
öö 
]
öö 
=
öö  
$str
öö! <
;
öö< =
}
õõ 
}
úú 	
private
ûû 
void
ûû 
EndStandardQuiz
ûû $
(
ûû$ %
)
ûû% &
{
üü 	
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
†† 
<
†† 
$num
††  !
;
††! "
i
††# $
++
††$ &
)
††& '
{
°° 
if
¢¢ 
(
¢¢ 
CardClasses
¢¢ 
[
¢¢  
i
¢¢  !
]
¢¢! "
==
¢¢# %
$str
¢¢& W
)
¢¢W X
{
££ 
if
§§ 
(
§§ 
subDomainsAreSet
§§ (
)
§§( )
{
•• 
subDomainAnswers
¶¶ (
.
¶¶( )
Add
¶¶) ,
(
¶¶, -+
GetOptionIdForCurrentQuestion
¶¶- J
(
¶¶J K
)
¶¶K L
[
¶¶L M
i
¶¶M N
]
¶¶N O
)
¶¶O P
;
¶¶P Q
}
ßß 
}
®® 
}
©© 
StandardQuizEnded
™™ 
=
™™ 
true
™™  $
;
™™$ %
}
´´ 	
private
≠≠ 
bool
≠≠ !
AreAnyCardsSelected
≠≠ (
(
≠≠( )
)
≠≠) *
{
ÆÆ 	
if
ØØ 
(
ØØ 
!
ØØ 
domainAnswers
ØØ 
.
ØØ 
Any
ØØ "
(
ØØ" #
)
ØØ# $
&&
ØØ% '
currentQuestion
ØØ( 7
==
ØØ8 :
questionsList
ØØ; H
.
ØØH I
Count
ØØI N
)
ØØN O
{
∞∞ 
return
±± 
false
±± 
;
±± 
}
≤≤ 
return
≥≥ 
true
≥≥ 
;
≥≥ 
}
¥¥ 	
private
∂∂ 
bool
∂∂  
IsOptionValueEmpty
∂∂ '
(
∂∂' (
string
∂∂( .
value
∂∂/ 4
)
∂∂4 5
{
∑∑ 	
if
∏∏ 
(
∏∏ 
string
∏∏ 
.
∏∏ 
IsNullOrEmpty
∏∏ $
(
∏∏$ %
value
∏∏% *
)
∏∏* +
)
∏∏+ ,
{
ππ 
return
∫∫ 
true
∫∫ 
;
∫∫ 
}
ªª 
return
ºº 
false
ºº 
;
ºº 
}
ΩΩ 	
	protected
øø 
override
øø 
async
øø  
Task
øø! % 
OnInitializedAsync
øø& 8
(
øø8 9
)
øø9 :
{
¿¿ 	
var
¡¡ #
originalQuestionsList
¡¡ %
=
¡¡& '
await
¡¡( -
QuizApiClient
¡¡. ;
.
¡¡; <#
GetAllDomainQuestions
¡¡< Q
(
¡¡Q R
)
¡¡R S
;
¡¡S T
var
¬¬ &
questionsWithEmptyOption
¬¬ (
=
¬¬) *
new
¬¬+ .
List
¬¬/ 3
<
¬¬3 4
Question
¬¬4 <
>
¬¬< =
(
¬¬= >
)
¬¬> ?
;
¬¬? @
var
√√ 
modifiedQuestions
√√ !
=
√√" #
new
√√$ '
List
√√( ,
<
√√, -
Question
√√- 5
>
√√5 6
(
√√6 7
)
√√7 8
;
√√8 9
foreach
≈≈ 
(
≈≈ 
var
≈≈ 
question
≈≈ !
in
≈≈" $#
originalQuestionsList
≈≈% :
)
≈≈: ;
{
∆∆ 
if
«« 
(
«« 
question
«« 
.
«« 
Options
«« $
.
««$ %
Any
««% (
(
««( )
option
««) /
=>
««0 2
string
««3 9
.
««9 :
IsNullOrEmpty
««: G
(
««G H
option
««H N
.
««N O
Content
««O V
)
««V W
)
««W X
)
««X Y
{
»» &
questionsWithEmptyOption
…… ,
.
……, -
Add
……- 0
(
……0 1
question
……1 9
)
……9 :
;
……: ;
}
   
else
ÀÀ 
{
ÃÃ 
modifiedQuestions
ÕÕ %
.
ÕÕ% &
Add
ÕÕ& )
(
ÕÕ) *
question
ÕÕ* 2
)
ÕÕ2 3
;
ÕÕ3 4
}
ŒŒ 
}
œœ 
modifiedQuestions
—— 
.
—— 
AddRange
—— &
(
——& '&
questionsWithEmptyOption
——' ?
)
——? @
;
——@ A
foreach
”” 
(
”” 
var
”” 
question
”” !
in
””" $
modifiedQuestions
””% 6
)
””6 7
{
‘‘ 
while
’’ 
(
’’ 
question
’’ 
.
’’  
Options
’’  '
.
’’' (
Count
’’( -
<
’’. /
$num
’’0 1
)
’’1 2
{
÷÷ 
question
◊◊ 
.
◊◊ 
Options
◊◊ $
.
◊◊$ %
Add
◊◊% (
(
◊◊( )
new
◊◊) ,
Option
◊◊- 3
(
◊◊3 4
)
◊◊4 5
)
◊◊5 6
;
◊◊6 7
}
ÿÿ 
}
ŸŸ 
questionsList
€€ 
=
€€ 
modifiedQuestions
€€ -
;
€€- .
await
›› 
JS
›› 
.
›› 
InvokeVoidAsync
›› $
(
››$ %
$str
››% 2
,
››2 3
questionsList
››4 A
)
››A B
;
››B C
}
ﬁﬁ 	
}
ﬂﬂ 
}‡‡ 